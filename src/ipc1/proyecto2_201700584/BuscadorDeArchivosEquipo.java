/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ipc1.proyecto2_201700584;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Pablo Roca
 */
public class BuscadorDeArchivosEquipo extends javax.swing.JFrame {
    ListaEquipos lista = new ListaEquipos();
    ListaJugadores listaJugadores = new ListaJugadores();
    ListaEstampas listaEstampas = new ListaEstampas();
    
    String[] lineasEquipos;
    String[][] datosEquipos;
    
    String[] lineasJugadores;
    String[][] datosJugadores;
    
    String[] lineasEstampas;
    String[][] datosEstampas;
    
    static String queCarga = null;
    /**
     * Creates new form BuscadorDeArchivos
     */
    public BuscadorDeArchivosEquipo() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BuscadorArchivos = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BuscadorArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscadorArchivosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BuscadorArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BuscadorArchivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscadorArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscadorArchivosActionPerformed
        JFileChooser selectorArchivo = (JFileChooser)evt.getSource();
        String seleccion = evt.getActionCommand();
        
        
        if(seleccion.equals(JFileChooser.APPROVE_SELECTION)){
            File archivoSeleccionado = selectorArchivo.getSelectedFile();
            String ruta = archivoSeleccionado.getAbsolutePath();
            
            
            
            BufferedReader br = null;
            String linea = "";
            String separadorLineas = "\n";
            String separador = ",";
            
            //Si es equipos---------------------------------------------------------------------------------------------
            if(queCarga.equals("equipos")){
                System.out.println("Entro a equipos");
                try{

                    br = new BufferedReader(new FileReader(ruta));
                    while((linea = br.readLine()) != null){
                        lineasEquipos = linea.split(separadorLineas);
    //                    System.out.println(lineas[0]);

                        datosEquipos = new String[lineasEquipos.length][];

                        for(int n = 0; n < lineasEquipos.length; n++){
                            datosEquipos[n] = lineasEquipos[n].split(separador);
                        }
                        lista.añadirEquipo(datosEquipos[0][0], datosEquipos[0][1], datosEquipos[0][2]);
                    }
                    JOptionPane.showMessageDialog(this, "Archivo cargado con exito", "Carga masiva", JOptionPane.INFORMATION_MESSAGE);

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                    setVisible(false);
                }
            }
            //Si es jugadores---------------------------------------------------------------------------------------------
            else if(queCarga.equals("jugadores")){
                System.out.println("Entro a jugadores");
                try{

                    br = new BufferedReader(new FileReader(ruta));
                    while((linea = br.readLine()) != null){
                        lineasEstampas = linea.split(separadorLineas);
    //                    System.out.println(lineas[0]);

                        datosEstampas = new String[lineasEstampas.length][];

                        for(int n = 0; n < lineasEstampas.length; n++){
                            datosEstampas[n] = lineasEstampas[n].split(separador);
                        }
                        listaEstampas.añadirEstampa(datosEstampas[0][0], datosEstampas[0][1], 
                                datosEstampas[0][2],datosEstampas[0][3]);
                    }
                    JOptionPane.showMessageDialog(this, "Archivo cargado con exito", "Carga masiva", JOptionPane.INFORMATION_MESSAGE);

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                    setVisible(false);
                }
            }
            //Si es estampas---------------------------------------------------------------------------------------------
            else if(queCarga.equals("estampas")){
                System.out.println("Entro a estampas");
                try{

                    br = new BufferedReader(new FileReader(ruta));
                    while((linea = br.readLine()) != null){
                        lineasEquipos = linea.split(separadorLineas);
    //                    System.out.println(lineas[0]);

                        datosEquipos = new String[lineasEquipos.length][];

                        for(int n = 0; n < lineasEquipos.length; n++){
                            datosEquipos[n] = lineasEquipos[n].split(separador);
                        }
                        lista.añadirEquipo(datosEquipos[0][0], datosEquipos[0][1], datosEquipos[0][2]);
                    }
                    JOptionPane.showMessageDialog(this, "Archivo cargado con exito", "Carga masiva", JOptionPane.INFORMATION_MESSAGE);

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                    setVisible(false);
                }
            }
            //Si es la imagen----------------------------------------------------------------------------------
            else if(queCarga.equals("imagen")){
                System.out.println("Entro a imagen");
                try{
                    crearEstampas.ruta = ruta;
                    JOptionPane.showMessageDialog(this, "Archivo cargado con exito", "Carga imagen", JOptionPane.INFORMATION_MESSAGE);

                }catch (HeadlessException ex) {
                    Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                    setVisible(false);
                }
            }
        }
        else if(seleccion.equals(JFileChooser.CANCEL_SELECTION)){
            setVisible(false);
//            System.out.println(queCarga);
        }
    }//GEN-LAST:event_BuscadorArchivosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscadorDeArchivosEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscadorDeArchivosEquipo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser BuscadorArchivos;
    // End of variables declaration//GEN-END:variables
}
